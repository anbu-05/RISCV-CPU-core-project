word aligned encoding:
jump and branch instructions are encoded as x2. i.e., if you wanna jump to location 40, type 20. if you wanna offset by 32 locations, type 16

lui function loads the imm value to the first 20 bits (i.e., it left shifts by 12).

0:   addi x5, x0, 0      # x5 ← 0 (counter)
//4:   lui  x6, 1          # x6 ← 1<<12 = 4096 (limit)
4:   addi x6, x0, 15	# x6 ← 15 (limit)

8:   addi x5, x5, 1      # x5 ← x5 + 1
12:  blt  x5, x6, -2      # if x5<x6, offset -4 bytes

16:  addi x5, x5, -1     # x5 ← x5 - 1
20:  bne  x5, x0, -2     # if x5≠0, offset -4 bytes 

24:  jal  x0, 4          # unconditional jump to PC=8 (restart up-count)
